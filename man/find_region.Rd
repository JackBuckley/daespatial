% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{find_region}
\alias{find_region}
\title{Find Region}
\usage{
find_region(data, shp, type = "coords")
}
\arguments{
\item{data}{A tibble/data.frame containing the data to be assigned to regions.
If assignment is to be conducted using coordinates (i.e. type = "coords"), the supplied data should include two
variables 'long' (longitude) and 'lat' (latitude), which will be used to assign each point to a region.
If assignment is to be conducted using an address (i.e. type = "address"), the supplied data should include a
variable "addr", which contains the address to use, which will first be geocoded using the tidygeocoder package.}

\item{shp}{A shapefile containing the polygons of the regions of interest.
This should be a sf object, such as that obtained from using st_read() to load
an ESRI shapefile. Shapefiles for common ABS geographies can be found at
https://www.abs.gov.au/websitedbs/d3310114.nsf/home/digital+boundaries}

\item{type}{Determines the method used to assign points to each regions. Options
are either "coords" (default), where assignment is based on supplied longitude and latitude data,
or "address", where assignment is based on a supplied address for each point.}
}
\value{
A tibble/data.frame containing the original data as well as the data related
to the shapefile polygon each point belongs to. The default is to not
return the geometry column (i.e. the polygons are dropped).
}
\description{
Find the region (e.g. postcode, SA2, electorate) for a series of points identified by their longitude and latitude (lon, lat) coordinates.
This tool is useful when you are interested in combining regional level data
with a database of information. For example, you could be looking to add information
on regional population and employment trends to a database of business locations.
}
\details{
It is also helpful when you are looking to aggregated granular data to the regional level.
For example, you have scrapped information on the location of companies operating in a
certain industry and now want to summarise the information you collected at the Statistical
Area 2 (SA2) level, but your data does not have this information.
}
\examples{
# Read in a shapefile of SA2 regions (available from the ABS using the link above)

sa2_shp <- st_read("SA2_2016_AUST.shp")

# Get the SA2 regions that Sydney Airport and Uluru belong to

test_data_coords <- tibble(
  name = c("Sydney Airport", "Uluru"),
  long = c(151.174211, 131.03841670),
  lat = c(-33.932302, -25.3440074 ),
)

output_coords <- find_region(shp = sa2_shp, data = test_data, type = ="coords")

# Get the SA2 regions that Sydney Airport and Uluru based on their addresses

test_data_addr <- tibble(
  name = c("Sydney Airport", "Uluru"),
  addr = c("Keith Smith Ave, Mascot NSW 2020", "Uluru Rd, Petermann NT 0872")
)

output_addr <- find_region(shp = sa2_shp, data = test_data, type = ="coords")

}
